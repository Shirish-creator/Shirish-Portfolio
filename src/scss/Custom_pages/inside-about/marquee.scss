

.menu {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	--marquee-width: 100vw;
	--offset: 20vw;
	--move-initial: calc(-25% + var(--offset));
	--move-final: calc(-50% + var(--offset));
	--item-font-size: 10vw;
	counter-reset: menu;
}

/* Make sure 3 items are visible in the viewport by setting suitable font size. */

.marquee {
	// position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	overflow: hidden;
	pointer-events: none;
	mix-blend-mode: color-burn;
    background-color: #161515;
	border-bottom: 1px solid white;
	border-top: 1px solid white;

}

.marquee__inner {
	width: fit-content;
	display: flex;
	position: relative;
	transform: translate3d(var(--move-initial), 0, 0);
	animation: marquee 5s linear infinite;
	animation-play-state: paused;
	opacity: 0;
	transition: opacity 0.1s;
	padding: 0.5rem 0;
}

.marquee .marquee__inner {
	animation-play-state: running;
	opacity: 1;
	transition-duration: 0.4s;
}

.marquee span {
  text-align: center;
	white-space: nowrap;
	font-size: 3.5rem;
	padding: 0 1vw;
	font-weight: 900;
	line-height: 1.15;
    color: white;
font-family:"Monument Extended Bold" !important;
font-style: italic;
-webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;

	      // Small devices (Potrait phones, 576px and up)
    
		  @media (min-width: 350px) {
			font-size: 1.5rem;

		}
	
		// Small devices (landscape phones, 576px and up)
		@media (min-width: 576px) {
			font-size: 2rem;

		}
	
		// Medium devices (tablets, 768px and up)
		@media (min-width: 768px) {
			font-size: 2.5rem;

		}
	
		// Large devices (desktops, 992px and up)
		@media (min-width: 992px) {
			font-size: 2.5rem;

		}
	
		// X-Large devices (large desktops, 1200px and up)
		@media (min-width: 1200px) {
			font-size: 3.5rem;

		}
	
		// XX-Large devices (larger desktops, 1400px and up)
		@media (min-width: 1400px) {
			font-size: 3.5rem;

	
		}

}

@keyframes marquee {
	0% {
		transform: translate3d(var(--move-initial), 0, 0);
	}

	100% {
		transform: translate3d(var(--move-final), 0, 0);
	}
}
